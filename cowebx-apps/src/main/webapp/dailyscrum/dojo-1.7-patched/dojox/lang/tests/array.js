/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/

define(["dojo","dijit","dojox","dojox/lang/functional","dojox/lang/functional/fold","dojox/lang/functional/reversed"],function(_1,_2,_3){_1.getObject("dojox.lang.tests.array",1);(function(){var df=_3.lang.functional,v,_4="%2",x={a:1,b:2,c:3};var _5=function(_6){this.array=_6;this.position=_6.length-1;};_1.extend(_5,{hasNext:df.lambda("this.position >= 0"),next:df.lambda("this.array[this.position--]")});tests.register("dojox.lang.tests.array",[function testFilter1(t){t.assertEqual(df.filter([1,2,3],_4),[1,3]);},function testFilter2(t){t.assertEqual(df.filter([1,2,3],"%2==0"),[2]);},function testFilterIter(t){var _7=new _5([1,2,3]);t.assertEqual(df.filter(_7,_4),[3,1]);},function testFilterRev(t){var _8=new _5([1,2,3]);t.assertEqual(df.filter(_8,_4),df.filterRev([1,2,3],_4));},function testForEach(t){t.assertEqual((v=[],df.forEach([1,2,3],function(x){v.push(x);}),v),[1,2,3]);},function testForEachIter(t){var _9=new _5([1,2,3]);t.assertEqual((v=[],df.forEach(_9,function(x){v.push(x);}),v),[3,2,1]);},function testForEachRev(t){t.assertEqual((v=[],df.forEachRev([1,2,3],function(x){v.push(x);}),v),[3,2,1]);},function testMap(t){t.assertEqual(df.map([1,2,3],"+3"),[4,5,6]);},function testMapIter(t){var _a=new _5([1,2,3]);t.assertEqual(df.map(_a,"+3"),[6,5,4]);},function testMapRev(t){var _b=new _5([1,2,3]);t.assertEqual(df.map(_b,"+3"),df.mapRev([1,2,3],"+3"));},function testEvery1(t){t.assertFalse(df.every([1,2,3],_4));},function testEvery2(t){t.assertTrue(df.every([1,3,5],_4));},function testEveryIter(t){var _c=new _5([1,3,5]);t.assertTrue(df.every(_c,_4));},function testEveryObj(t){t.assertFalse(df.every(x,"%2"));},function testEveryRev1(t){t.assertFalse(df.everyRev([1,2,3],_4));},function testEveryRev2(t){t.assertTrue(df.everyRev([1,3,5],_4));},function testSome1(t){t.assertFalse(df.some([2,4,6],_4));},function testSome2(t){t.assertTrue(df.some([1,2,3],_4));},function testSomeIter(t){var _d=new _5([1,2,3]);t.assertTrue(df.some(_d,_4));},function testSomeObj(t){t.assertTrue(df.some(x,"%2"));},function testSomeRev1(t){t.assertFalse(df.someRev([2,4,6],_4));},function testSomeRev2(t){t.assertTrue(df.someRev([1,2,3],_4));},function testReduce1(t){t.assertEqual(df.reduce([4,2,1],"x-y"),1);},function testReduce2(t){t.assertEqual(df.reduce([4,2,1],"x-y",8),1);},function testReduceIter(t){var _e=new _5([1,2,4]);t.assertEqual(df.reduce(_e,"x-y"),1);},function testReduceRight1(t){t.assertEqual(df.reduceRight([4,2,1],"x-y"),-5);},function testReduceRight2(t){t.assertEqual(df.reduceRight([4,2,1],"x-y",8),1);}]);})();});require(["dojox/lang/tests/array"]);