insert new node:
	1. Op is an 'insert'
	2. Uses topic of parent item so order can be preserved
	3. Makes a new item, adds this item to store
	4. Updates parent item's children by adding new item
	
delete node:
	1. Op is a 'delete'
	2. Uses topic of parent item so order can be preserved
	3. Deletes target item from the store
	4. Updates parent item's children by removing item
   	5. Leaves all child items in store

move node:
	We have two ops here: 
	A. Remove node being moved from current parent's children array
		1. Op is a 'delete', but value has special flag in it so we can call a different callback then a regular delete
		2. Uses topic of parent so order is preserved
		3. Leave node being moved in tree so no deep copy is required on the next op...
	B. Add node being moved to new parent's children array ('insert')
		1. Op is an 'insert', but value has special flag in it so we can call a different callback then a regular insert
		2. Uses topic of parent so order is preserved
		3. Simply add ref to node being moved to new parent's children array