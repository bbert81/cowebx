/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/

define(["dojo","dijit","dojox","dojox/lang/functional/fold","dojox/lang/functional/scan","dojox/lang/functional/curry","dojox/lang/functional/sequence","dojox/lang/functional/listcomp","dojox/lang/functional/object"],function(_1,_2,_3){_1.getObject("dojox.lang.tests.fold",1);(function(){var df=_3.lang.functional,a=df.arg,x={a:1,b:2,c:3};var _4=function(_5){this.array=_5;this.position=_5.length-1;};_1.extend(_4,{hasNext:df.lambda("this.position >= 0"),next:df.lambda("this.array[this.position--]")});tests.register("dojox.lang.tests.fold",[function testFoldl1(t){t.assertEqual(df.foldl([1,2,3],"+",0),6);},function testFoldl2(t){t.assertEqual(df.foldl1([1,2,3],"*"),6);},function testFoldl3(t){t.assertEqual(df.foldl1([1,2,3],"/"),1/6);},function testFoldl4(t){t.assertEqual(df.foldl1([1,2,3],df.partial(Math.max,a,a)),3);},function testFoldl5(t){t.assertEqual(df.foldl1([1,2,3],df.partial(Math.min,a,a)),1);},function testFoldlIter(t){var _6=new _4([1,2,3]);t.assertEqual(df.foldl(_6,"+",0),6);},function testFoldl1Iter(t){var _7=new _4([1,2,3]);t.assertEqual(df.foldl1(_7,"/"),3/2);},function testFoldlObj(t){t.assertEqual(df.foldl(x,"*",2),12);},function testFoldl1Obj(t){t.assertEqual(df.foldl1(x,"+"),6);},function testFoldr1(t){t.assertEqual(df.foldr([1,2,3],"+",0),6);},function testFoldr2(t){t.assertEqual(df.foldr1([1,2,3],"*"),6);},function testFoldr3(t){t.assertEqual(df.foldr1([1,2,3],"/"),3/2);},function testFoldr4(t){t.assertEqual(df.foldr1([1,2,3],df.partial(Math.max,a,a)),3);},function testFoldr5(t){t.assertEqual(df.foldr1([1,2,3],df.partial(Math.min,a,a)),1);},function testUnfold1(t){t.assertEqual(df.repeat(10,"2*",1),df.unfold("x[0] >= 10","x[1]","[x[0] + 1, 2 * x[1]]",[0,1]));},function testUnfold2(t){t.assertEqual(df.until(">1024","2*",1),df.unfold(">1024","x","2*",1));},function testScanl1(t){t.assertEqual(df.scanl([1,2,3],"+",0),[0,1,3,6]);},function testScanl2(t){t.assertEqual(df.scanl1([1,2,3],"*"),[1,2,6]);},function testScanl3(t){t.assertEqual(df.scanl1([1,2,3],df.partial(Math.max,a,a)),[1,2,3]);},function testScanl4(t){t.assertEqual(df.scanl1([1,2,3],df.partial(Math.min,a,a)),[1,1,1]);},function testScanlIter(t){var _8=new _4([1,2,3]);t.assertEqual(df.scanl(_8,"+",0),[0,3,5,6]);},function testScanl1Iter(t){var _9=new _4([1,2,3]);t.assertEqual(df.scanl1(_9,"*"),[3,6,6]);},function testScanlObj(t){t.assertEqual(df.scanl(x,"+",0),df.scanl(df.values(x),"+",0));},function testScanl1Obj(t){t.assertEqual(df.scanl1(x,"*"),df.scanl1(df.values(x),"*"));},function testScanr1(t){t.assertEqual(df.scanr([1,2,3],"+",0),[6,5,3,0]);},function testScanr2(t){t.assertEqual(df.scanr1([1,2,3],"*"),[6,6,3]);},function testScanr3(t){t.assertEqual(df.scanr1([1,2,3],df.partial(Math.max,a,a)),[3,3,3]);},function testScanr4(t){t.assertEqual(df.scanr1([1,2,3],df.partial(Math.min,a,a)),[1,2,3]);}]);})();});require(["dojox/lang/tests/fold"]);