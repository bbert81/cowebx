/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/

define(["dojo","dijit","dojox","dojox/dtl","dojox/dtl/Context"],function(_1,_2,_3){_1.getObject("dojox.dtl.tests.text.tag",1);doh.register("dojox.dtl.text.tag",[function test_tag_block_and_extends(t){var dd=_3.dtl;var _4=new dd.Template("{% extends \"../../dojox/dtl/tests/templates/pocket.html\" %}{% block pocket %}Simple{% endblock %}");t.is("Simple Pocket",_4.render());var _5=new dd.Context({parent:"../../dojox/dtl/tests/templates/pocket.html"});_4=new dd.Template("{% extends parent %}{% block pocket %}Variabled{% endblock %}");t.is("Variabled Pocket",_4.render(_5));_5.parent=_1.moduleUrl("dojox.dtl.tests.templates","pocket.html");_4=new dd.Template("{% extends parent %}{% block pocket %}Slightly More Advanced{% endblock %}");t.is("Slightly More Advanced Pocket",_4.render(_5));_5.parent={url:_1.moduleUrl("dojox.dtl.tests.templates","pocket.html")};_4=new dd.Template("{% extends parent %}{% block pocket %}Super{% endblock %}");t.is("Super Pocket",_4.render(_5));},function test_tag_block(t){var dd=_3.dtl;var _6=new dd.Context({parent:_1.moduleUrl("dojox.dtl.tests.templates","pocket2.html"),items:["apple","banana","lemon"]});var _7=new dd.Template("{% extends parent %}{% block pocket %}My {{ item }}{% endblock %}");t.is("(My apple) (My banana) (My lemon) Pocket",_7.render(_6));},function test_tag_block_super(t){var dd=_3.dtl;var _8=new dd.Context({parent:_1.moduleUrl("dojox.dtl.tests.templates","pocket2.html"),items:["apple","banana","lemon"]});var _9=new dd.Template("{% extends parent %}{% block pocket %}My {{ item }} {{ block.super }}{% endblock %}");t.is("(My apple Hot) (My banana Hot) (My lemon Hot) Pocket",_9.render(_8));},function test_tag_comment(t){var dd=_3.dtl;var _a=new dd.Template("Hot{% comment %}<strong>Make me disappear</strong>{% endcomment %} Pocket");t.is("Hot Pocket",_a.render());var _b=false;try{_a=new dd.Template("Hot{% comment %}<strong>Make me disappear</strong> Pocket");}catch(e){t.is("Unclosed tag found when looking for endcomment",e.message);_b=true;}t.t(_b);},function test_tag_cycle(t){var dd=_3.dtl;var _c=new dd.Context({items:["apple","banana","lemon"],unplugged:"Torrey"});var _d=new dd.Template("{% for item in items %}{% cycle 'Hot' 'Diarrhea' unplugged 'Extra' %} Pocket. {% endfor %}");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. ",_d.render(_c));t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. ",_d.render(_c));_c.items.push("guava","mango","pineapple");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. Extra Pocket. Hot Pocket. Diarrhea Pocket. ",_d.render(_c));_c.items=_c.items.slice(0,3);_d=new dd.Template("{% for item in items %}{% cycle Hot,Diarrhea,Torrey,Extra %} Pocket. {% endfor %}");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. ",_d.render(_c));t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. ",_d.render(_c));_c.items.push("guava","mango","pineapple");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. Extra Pocket. Hot Pocket. Diarrhea Pocket. ",_d.render(_c));_c=new _3.dtl.Context({unplugged:"Torrey"});_d=new dd.Template("{% cycle 'Hot' 'Diarrhea' unplugged 'Extra' as steakum %} Pocket. {% cycle steakum %} Pocket. {% cycle steakum %} Pocket.");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket.",_d.render(_c));_d=new dd.Template("{% cycle 'Hot' 'Diarrhea' unplugged 'Extra' as steakum %} Pocket. {% cycle steakum %} Pocket. {% cycle steakum %} Pocket. {% cycle steakum %} Pocket. {% cycle steakum %} Pocket. {% cycle steakum %} Pocket.");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. Extra Pocket. Hot Pocket. Diarrhea Pocket.",_d.render(_c));_c.items={list:["apple","banana","lemon"]};_d=new dd.Template("{% for item in items.list %}{% cycle 'Hot' 'Diarrhea' unplugged 'Extra' %} Pocket. {% endfor %}");t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. ",_d.render(_c));t.is("Hot Pocket. Diarrhea Pocket. Torrey Pocket. ",_d.render(_c));},function test_tag_debug(t){var dd=_3.dtl;var _e=new dd.Context({items:["apple","banana","lemon"],unplugged:"Torrey"});var _f=new dd.Template("{% debug %}");t.is("[items: object]\n[unplugged: string]\n",_f.render(_e));},function test_tag_filter(t){var dd=_3.dtl;var _10=new dd.Template("{% filter lower|center:\"15\" %}Hot Pocket{% endfilter %}");t.is("  hot pocket   ",_10.render());},function test_tag_firstof(t){var dd=_3.dtl;var _11=new dd.Context({found:"unicorn"});var _12=new dd.Template("{% firstof one two three four found %}");t.is("unicorn",_12.render(_11));_11.four=null;t.is("null",_12.render(_11));_11.three=false;t.is("false",_12.render(_11));},function test_tag_for(t){var dd=_3.dtl;var _13=new dd.Context({items:["apple","banana","lemon"]});var _14=new dd.Template("{% for item in items %}<li>{{ item }}</li>{% endfor %}");t.is("<li>apple</li><li>banana</li><li>lemon</li>",_14.render(_13));_14=new dd.Template("{% for item in items reversed %}<li>{{ item }}</li>{% endfor %}");t.is("<li>lemon</li><li>banana</li><li>apple</li>",_14.render(_13));_13.items={apple:"Red Delicious",banana:"Cavendish",lemon:"Citrus"};_14=new dd.Template("{% for key, value in items.items %}<li>{{ value }} {{ key|title }}</li>{% endfor %}");t.is("<li>Red Delicious Apple</li><li>Cavendish Banana</li><li>Citrus Lemon</li>",_14.render(_13));_13.items=[["apple","Red Delicious",1.99],["banana","Cavendish",0.49],["lemon","Citrus",0.29]];_14=new dd.Template("{% for fruit, type, price in items %}<li>{{ type }} {{ fruit|title }} costs ${{ price}}</li>{% endfor %}");t.is("<li>Red Delicious Apple costs $1.99</li><li>Cavendish Banana costs $0.49</li><li>Citrus Lemon costs $0.29</li>",_14.render(_13));_14=new dd.Template("{% for fruit, type, price in items reversed %}<li>{{ type }} {{ fruit|title }} costs ${{ price}}</li>{% endfor %}");t.is("<li>Citrus Lemon costs $0.29</li><li>Cavendish Banana costs $0.49</li><li>Red Delicious Apple costs $1.99</li>",_14.render(_13));var _15=false;try{_14=new dd.Template("{% for item initems %}<li>{{ item }}</li>{% endfor %}");}catch(e){_15=true;t.is("'for' statements should have at least four words: for item initems",e.message);}t.t(_15);_15=false;try{_14=new dd.Template("{% for item ni items %}<li>{{ item }}</li>{% endfor %}");}catch(e){_15=true;t.is("'for' tag received an invalid argument: for item ni items",e.message);}t.t(_15);_15=false;try{_14=new dd.Template("{% for my item in items %}<li>{{ item }}</li>{% endfor %}");}catch(e){_15=true;t.is("'for' tag received an invalid argument: for my item in items",e.message);}t.t(_15);},function test_tag_if(t){var dd=_3.dtl;var _16=new dd.Context({jokes:{hot_pockets:true,unicycles:true,bacon:true}});var _17=new dd.Template("Comedian is {% if jokes.hot_pockets and jokes.unicycles and jokes.bacon %}funny{% else %}not funny{% endif %}");t.is("Comedian is funny",_17.render(_16));_16.jokes.unicycles=false;t.is("Comedian is not funny",_17.render(_16));_16.comedians={hedberg:true,gaffigan:true,cook:true};_17=new dd.Template("Show will be {% if comedians.hedberg or comedians.gaffigan %}worth seeing{% else %}not worth seeing{% endif %}");t.is("Show will be worth seeing",_17.render(_16));_17=new dd.Template("Show will {% if comedians.hedberg or comedians.gaffigan %}{% if comedians.cook %}not {% endif %}be worth seeing{% else %}not be worth seeing{% endif %}");t.is("Show will not be worth seeing",_17.render(_16));_16.comedians.cook=false;t.is("Show will be worth seeing",_17.render(_16));_17=new dd.Template("Show will be {% if comedians.hedberg and comedians.gaffigan and not comedians.cook %}AWESOME{% else %}almost awesome{% endif %}");t.is("Show will be AWESOME",_17.render(_16));_16.comedians.cook=true;t.is("Show will be almost awesome",_17.render(_16));var _18=false;try{_17=new dd.Template("Show will be {% if comedians.hedberg or comedians.gaffigan and not comedians.cook %}worth seeing{% else %}not worth seeing{% endif %}");}catch(e){_18=true;t.is("'if' tags can't mix 'and' and 'or'",e.message);}t.t(_18);},function test_tag_ifchanged(t){var dd=_3.dtl;var _19=new dd.Context({year:2008,days:[new Date(2008,0,12),new Date(2008,0,28),new Date(2008,1,1),new Date(2008,1,1),new Date(2008,1,1)]});var _1a=new dd.Template("<h1>Archive for {{ year }}</h1>"+"{% for date in days %}"+"{% ifchanged %}<h3>{{ date|date:\"F\" }}</h3>{% endifchanged %}"+"<a href=\"{{ date|date:'M/d'|lower }}/\">{{ date|date:'j' }}</a>"+"{% endfor %}");t.is("<h1>Archive for 2008</h1>"+"<h3>January</h3>"+"<a href=\"jan/12/\">12</a>"+"<a href=\"jan/28/\">28</a>"+"<h3>February</h3>"+"<a href=\"feb/01/\">1</a>"+"<a href=\"feb/01/\">1</a>"+"<a href=\"feb/01/\">1</a>",_1a.render(_19));_1a=new dd.Template("{% for date in days %}"+"{% ifchanged date.date %} {{ date.date }} {% endifchanged %}"+"{% ifchanged date.hour date.date %}"+"{{ date.hour }}"+"{% endifchanged %}"+"{% endfor %}");t.is(" 2008-01-12 0 2008-01-28 0 2008-02-01 0",_1a.render(_19));},function test_tag_ifequal(t){var dd=_3.dtl;var _1b=new dd.Context({user:{id:314},comment:{user_id:314}});var _1c=new dd.Template("{% ifequal user.id comment.user_id %}You posted this{% endifequal %}");t.is("You posted this",_1c.render(_1b));_1b.user.id=313;t.is("",_1c.render(_1b));var _1d=false;try{_1c=new dd.Template("{% ifequal user.id %}You posted this{% endifequal %}");}catch(e){_1d=true;t.is("ifequal takes two arguments",e.message);}t.t(_1d);_1d=false;try{_1c=new dd.Template("{% ifequal user.id comment.user_id %}You posted this{% endif %}");}catch(e){_1d=true;t.is("No tag found for endif",e.message);}t.t(_1d);_1c=new dd.Template("{% ifequal empty \"\" %}empty{% endifequal %}");doh.is("empty",_1c.render());},function test_tag_ifnotequal(t){var dd=_3.dtl;var _1e=new dd.Context({favorite:"hedberg",comedian:"cook"});var _1f=new dd.Template("{% ifnotequal favorite comedian %}Not your favorite{% else %}Your favorite{% endifnotequal %}");t.is("Not your favorite",_1f.render(_1e));_1e.comedian="hedberg";t.is("Your favorite",_1f.render(_1e));},function test_tag_include(t){var dd=_3.dtl;var _20=new dd.Context({hello:_1.moduleUrl("dojox.dtl.tests.templates","hello.html"),person:"Bob",people:["Charles","Ralph","Julia"]});var _21=new dd.Template("{% include hello %}");t.is("Hello, <span>Bob</span>",_21.render(_20));_21=new dd.Template("{% include \"../../dojox/dtl/tests/templates/hello.html\" %}");t.is("Hello, <span>Bob</span>",_21.render(_20));_21=new dd.Template("{% for person in people %}{% include hello %} {% endfor %}");t.is("Hello, <span>Charles</span> Hello, <span>Ralph</span> Hello, <span>Julia</span> ",_21.render(_20));},function test_tag_load(t){t.f(_3.dtl.tests.text.load);new _3.dtl.Template("{% load dojox.dtl.tests.text.load %}");t.t(_3.dtl.tests.text.load);},function test_tag_now(t){var dd=_3.dtl;var _22=new dd.Template("It is {% now \"jS F Y H:i\" %}");t.t(_22.render().match(/^It is \d{1,2}[a-z]{2} [A-Z][a-z]+ [0-9]{4,} \d{2}:\d{2}$/));_22=new dd.Template("It is the {% now \"jS \\o\\f F\" %}");t.t(_22.render().match(/^It is the \d{1,2}[a-z]{2} of [A-Z][a-z]+$/));_22=new dd.Template("It is the {% now 'jS \\o\\f F' %}");t.t(_22.render().match(/^It is the \d{1,2}[a-z]{2} of [A-Z][a-z]+$/));var _23=false;try{_22=new dd.Template("It is the {% now 'jS \\o\\f F %}");}catch(e){_23=true;t.is("'now' statement takes one argument",e.message);}t.t(_23);_23=false;try{_22=new dd.Template("It is the {% now \"jS \\o\\f F %}");}catch(e){_23=true;t.is("'now' statement takes one argument",e.message);}t.t(_23);},function test_tag_regroup(t){var dd=_3.dtl;var _24=new dd.Context({people:[{firstName:"Bill",lastName:"Clinton",gender:"Male"},{firstName:"Margaret",lastName:"Thatcher",gender:"Female"},{firstName:"Path",lastName:"Smith",gender:"Unkown"},{firstName:"Condoleezza",lastName:"Rice",gender:"Female"},{firstName:"George",lastName:"Bush",gender:"Male"}]});var _25=new dd.Template("{% regroup people|dictsort:'gender' by gender as grouped %}<ul>{% for group in grouped %}<li>{{ group.grouper }}<ul>{% for item in group.list %}<li>{{ item.firstName }} {{ item.lastName }}</li>{% endfor %}</ul></li>{% endfor %}</ul>");t.t(_25.render(_24).match(new RegExp("^<ul><li>Female<ul><li>(Condoleezza Rice|Margaret Thatcher)</li><li>(Condoleezza Rice|Margaret Thatcher)</li></ul></li><li>Male<ul><li>(Bill Clinton|George Bush)</li><li>(Bill Clinton|George Bush)</li></ul></li><li>Unkown<ul><li>Path Smith</li></ul></li></ul>$")));},function test_tag_spaceless(t){var dd=_3.dtl;var _26=new dd.Template("{% spaceless %}<ul> \n <li>Hot</li> \n\n<li>Pocket </li>\n </ul>{% endspaceless %}");t.is("<ul><li>Hot</li><li>Pocket </li></ul>",_26.render());},function test_tag_ssi(t){var dd=_3.dtl;var _27=new dd.Context({hello:_1.moduleUrl("dojox.dtl.tests.templates","hello.html"),person:"Bob",people:["Charles","Ralph","Julia"]});var _28=new dd.Template("{% ssi hello parsed %}");t.is("Hello, <span>Bob</span>",_28.render(_27));_28=new dd.Template("{% ssi hello %}");t.is("Hello, <span>{{ person }}</span>",_28.render(_27));_28=new dd.Template("{% ssi \"../../dojox/dtl/tests/templates/hello.html\" parsed %}");t.is("Hello, <span>Bob</span>",_28.render(_27));_28=new dd.Template("{% for person in people %}{% ssi hello parsed %} {% endfor %}");t.is("Hello, <span>Charles</span> Hello, <span>Ralph</span> Hello, <span>Julia</span> ",_28.render(_27));},function test_tag_templatetag(t){var dd=_3.dtl;var _29=new dd.Template("{% templatetag openblock %}");t.is("{%",_29.render());_29=new dd.Template("{% templatetag closeblock %}");t.is("%}",_29.render());_29=new dd.Template("{% templatetag openvariable %}");t.is("{{",_29.render());_29=new dd.Template("{% templatetag closevariable %}");t.is("}}",_29.render());_29=new dd.Template("{% templatetag openbrace %}");t.is("{",_29.render());_29=new dd.Template("{% templatetag closebrace %}");t.is("}",_29.render());_29=new dd.Template("{% templatetag opencomment %}");t.is("{#",_29.render());_29=new dd.Template("{% templatetag closecomment %}");t.is("#}",_29.render());},function test_tag_widthratio(t){var dd=_3.dtl;var _2a=new dd.Context({this_value:175,max_value:200});var _2b=new dd.Template("<img src=\"bar.gif\" height=\"10\" width=\"{% widthratio this_value max_value 100 %}\" />");t.is("<img src=\"bar.gif\" height=\"10\" width=\"88\" />",_2b.render(_2a));},function test_tag_with(t){var dd=_3.dtl;var _2c=new dd.Context({person:{someSqlMethod:function(){return 4815162342;}}});var _2d=new dd.Template("{% with person.someSqlMethod as total %}{{ total }} object{{ total|pluralize }}{% endwith %}");t.is("4815162342 objects",_2d.render(_2c));}]);});require(["dojox/dtl/tests/text/tag"]);